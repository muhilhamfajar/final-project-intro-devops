# Generated by Selenium IDE
import pytest
from selenium import webdriver
from selenium.webdriver.common.by import By
import chromedriver_autoinstaller
from pyvirtualdisplay import Display
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

# Inisialisasi virtual display untuk menjalankan browser tanpa GUI (headless)
display = Display(visible=0, size=(800, 800))
display.start()

# Menggunakan chromedriver_autoinstaller untuk menginstal ChromeDriver
chromedriver_autoinstaller.install()

# Konfigurasi opsi Chrome
chrome_options = webdriver.ChromeOptions()

# Daftar opsi yang ingin ditambahkan
options = [
    "--window-size=1200,1200",
    "--ignore-certificate-errors",
    "--headless"
]

# Menambahkan opsi-opsi ke dalam chrome_options
for option in options:
    chrome_options.add_argument(option)
    
class TestTweet:
    @classmethod
    def setup_class(cls):
        cls.driver = webdriver.Chrome(options=chrome_options)
        cls.driver.get("http://localhost:8080")

    @classmethod
    def teardown_class(cls):
        # Tutup browser setelah selesai pengujian
        cls.driver.quit()
  
    def test_open_homepage(self):
        self.driver.get("http://localhost:8080/")
        self.driver.set_window_size(1223, 868)
        self.driver.find_element(By.XPATH, "//h1[contains(text(),'Home Pages')]")
   
# Jalankan pengujian jika file ini dieksekusi secara langsung
if __name__ == "__main__":
    pytest.main()